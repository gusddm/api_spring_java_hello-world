name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  packages: write  # This grants the workflow permission to publish to GHCR

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permissions to Gradle
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build --no-daemon

      - name: Run Tests
        run: ./gradlew test

  docker:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry (GHCR)
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

      - name: Build and Push Docker Image
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository_owner }}/my-spring-boot-app:latest
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME

  deploy:
    needs: docker
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Minikube
        run: |
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube
          minikube version

      - name: Start Minikube
        run: |
          minikube start --driver=docker
          minikube status

      - name: Set up kubectl
        run: |
          echo "Setting up kubectl"
          sudo apt-get update && sudo apt-get install -y kubectl
          kubectl version --client

      - name: Debug - List directory contents
        run: ls -R

      - name: Apply Kubernetes Deployment
        run: |
          kubectl apply -f $GITHUB_WORKSPACE/k8s/deployment.yaml
          kubectl apply -f $GITHUB_WORKSPACE/k8s/service.yaml

      - name: Verify deployment
        run: |
          kubectl rollout status deployment/my-spring-boot-app
          kubectl get pods
          kubectl get svc